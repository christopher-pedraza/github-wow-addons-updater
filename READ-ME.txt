The configuration file is composed of two types of sections: General Setup and Sources.

The General Setup section is titled "SETUP" and looks something like this:

'''
[SETUP]
number_sources = 3
asset1_dir = C:\dir\to\file\a1
asset2_dir = C:\dir\to\file\a2
auto_delete_downloads = TRUE
'''

Starting with the name of the section, the line "[SETUP]" should remain exactly as it is
as it's the section name and is used in the program to identify the values for the General
Setup.

The first of the values under the title is "number_sources". This value represents the 
number of sources and is directly related to the number of Sources sections below (more
on this later). For example, if you want to download addons from 3 sources, you should set
as the value "3" as it's in the example above.

The next lines contain the directories where the assets that are downloaded from the 
sources will be copied. The name of each variable follows the format: "{category}_dir".
It's important that this category name should be the same as the id in the sources, which
will be discussed later. Basically, if you have 3 places you want to store things, assign
to each one a category name that will be later used to know what files from the sources
should go where. Keep these names you have decided in mind as they will be useful for
the configuration of the sources.

Finally, there's the "auto_delete_downloads" attribute. This can take the values "TRUE"
or "FALSE", but it's not case sensitive. When TRUE, the app won't ask you every time it
updates the addons whether you want to keep the content of the downloads folder, it will
automatically delete everythin in it. If FALSE, after updating it will ask you if you 
want to keep the content of the folder or not. Notice that the downloads directory is
NOT the default downloads folder in your computer, but rather, a folder that is created
in the same directory where the program is when running it.

Don't worry if the order of your attributes is not the same as the one in the example, 
as the order doesn't matter. Also, you may have as many directories as you want, not
just 2, the same goes for the number of sources. And lastly, the number of directories
doesn't need to be the same as the number of sources. You could have multiple sources
copying the content to a single directory, or even a single source copying to multiple
directories.

The next sections in the file correspond to all the sources from where you want to 
download content. The number of sections must be equal to the value in "number_sources",
or else, only the first sources up to the value you have given to the attribute will be
considered. If, for instance, you have 5 sections of sources following the SETUP, but
the value given to the attribute "number_sources" is of 2, only the sources "SOURCE_1"
and "SOURCE_2" will be considered. This could be useful in case you don't need a source
anymore, but would like to preserve the current configuration of it in case you need it
in the future, you may make that source your last one and reduce the value of the
attribute (more on this later). 

Each section is roughly structured like this:

'''
[SOURCE_1]
source_url = https://github.com/{user}/{repo}
current_version = -1
retail_id = mainline
classic_id = vanilla
'''

We first start once again with the name of the section. The name will ALWAYS start with
the word "SOURCE" followed by an underscore and an index from 1, up to the value of the
attribute "number_sources". If any of the sources from 1, up to the value doesn't exist,
the program won't start and will show you a message indicating the section that you are
missing. In case you don't need that section, just remove the ones that you don't need
reduce the value of "number_sources" to the number of sources you need, and numerate
the sections correctly (for example, for 2 sources, the two sections would be named
"SOURCE_1" and "SOURCE_2"). However, even if you cannot have less sections than the 
number specified by "number_sources", you could have a value lower than the sections
you declared if you don't want to include the last section anymore, but want to keep
the configuration in the file.

The following line contains the url of the source. This needs to be a valid link to a
github repository in the form "https://github.com/{user}/{repo}". Do not add anything
else to the link, as that will most likely break the program. 

Next is the "current_version", which indicates the last version that was donwloaded by
the program. You may ignore this attribute as it autogenerates in case it doesn't exist.
It is used so the program knows whether you already have the newest version available
or not. The first time you run the program it will automatically change the value so
you may leave it with a "-1" as a value, or completely ignore it and let the program
add it by itself.

Lastly are the id attributes. These let the program relate the assets downloaded from
the github repository's latest release with the categories you previously defined in
the SETUP section. The attributes' names should have the following structure: 
"{category_id}". The value of these attributes will be a part of the asset name that
belongs to the category. For example, if we have the files "file1_mainline.zip",
"file2_vanilla.zip" and "something.zip" and we want to target only the first of the
files, we could use as a value "mainline" as only that file contains that word. If, on
the other hand we want to target the first 2 files, we could use the value "file" as 
both of them contain that word, but the file 3 ("something.zip") doesn't contain it, so
it wouldn't be targeted.

In the following example we define a category and its directory, as well as two files 
that will be downloaded 



NECESITO AGREGAR UN ATRIBUTO DE SEPARADOR Y PONER TODOS LOS IDS COMO LISTA SEPARADOS POR EL SEPARADOR YA QUE NO ME DEJA REPETIR ATRIBUTOS